name: CI\CD

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

env:
  DOCKER_USERNAME: "yakimka"
  PROJECT_NAME: "poetry"
  MAIN_PY_VERSION: "3.11"
  REGISTRY: ""
  DOCKER_BUILDKIT: "1"
  COMPOSE_DOCKER_CLI_BUILD: "1"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: read-all

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        poetry-version: ['2.0.0']
        multi: [true, false]
        python-version: ['3.10-slim', '3.11-slim', '3.12-slim']

    steps:
      - uses: actions/checkout@v4

      - run: echo "IMAGE_FULL_NAME=$(echo ${DOCKER_USERNAME}/${PROJECT_NAME})" >> $GITHUB_ENV

      - name: Prepare Docker
        env:
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          docker login "$REGISTRY" -u "$DOCKER_USERNAME" --password="${DOCKERHUB_TOKEN}"
          docker buildx create --use --driver=docker-container
          docker --version && docker compose --version

      # https://docs.docker.com/build/cache/backends/gha/
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v3

      - name: Create tag string
        run: echo "TAG_ARGS=-t ${IMAGE_FULL_NAME}:${{ matrix.poetry-version }}${{ matrix.multi == true && '-multi' || '' }}-py${{ matrix.python-version }}" >> $GITHUB_ENV

      - name: Set push flag
        if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/master'
        run: echo "PUSH_FLAG=--push" >> $GITHUB_ENV

      - run: echo $TAG_ARGS

      - name: Build image
        run: >
          docker buildx build ${PUSH_FLAG:-}
          --build-arg POETRY_VERSION=${{ matrix.poetry-version }}
          --build-arg MULTI=${{ matrix.multi }}
          --build-arg PYTHON_VERSION=${{ matrix.python-version }}
          --cache-to type=gha,mode=max,scope=$GITHUB_REF_NAME-${{ matrix.poetry-version }}${{ matrix.multi }}-${{ matrix.python-version }}
          --cache-from type=gha,scope=$GITHUB_REF_NAME-${{ matrix.poetry-version }}${{ matrix.multi }}-${{ matrix.python-version }}
          --platform=linux/arm64,linux/amd64
          ${TAG_ARGS} .
